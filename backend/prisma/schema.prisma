generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // postgres
  url      = "file:./dev.db" // env("DATABASE_URL")
}

// enum Roles {
//   ADMIN
//   FREQUENTER
//   ENVIRONMENT-MANAGER
// }

model Rfid {
  id        String   @id @default(uuid())
  tag       String   @unique
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AccessTime {
  id        String   @id @default(uuid())
  dayOfWeek String
  startTime DateTime
  endTime   DateTime
  User      User     @relation(fields: [userId], references: [id])
  userId    String
}

model User {
  id                      String       @id @default(uuid())
  name                    String
  registration            String       @unique
  password                String
  role                    String // Roles
  rfid                    Rfid?
  mac                     String?
  adminEnvironment        Environment? @relation("admins", fields: [environmentAdminId], references: [id])
  environmentAdminId      String?
  frequenterEnvironment   Environment? @relation("frequenters", fields: [environmentFrequenterId], references: [id])
  environmentFrequenterId String?
  createdAt               DateTime     @default(now())
  updatedAt               DateTime     @updatedAt
  accessTimes             AccessTime[]
}

model Environment {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  admins      User[]    @relation("admins")
  frequenters User[]    @relation("frequenters")
  carontes    Caronte[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Caronte {
  id            String      @id @default(uuid())
  ip            String      @unique
  esp           String      @unique
  password      String
  Environment   Environment @relation(fields: [environmentId], references: [id])
  environmentId String
  Log           Log[]
}

// enum LogTypes {
//   INFO
//   WARN
//   DEBUG
// }

model Log {
  id         String   @id @default(uuid())
  caronte    Caronte  @relation(fields: [caronteMac], references: [esp])
  caronteMac String
  type       String // LogTypes
  message    String
  topic      String
  createdAt  DateTime @default(now())
}
